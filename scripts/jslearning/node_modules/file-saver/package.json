{
  "_from": "file-saver",
  "_id": "file-saver@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-6+m86v05OmTZxY0W3+GL2KanulJvVSpTLPM7Fp1gHv30yTDYo8sg8ZrmlEr1LLgnYWJMXy4hrugHWZJSFheTRQ==",
  "_location": "/file-saver",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "file-saver",
    "name": "file-saver",
    "escapedName": "file-saver",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://192.168.56.99:4873/file-saver/-/file-saver-1.0.0.tgz",
  "_shasum": "3c40c1ac5f6b75a9af263e3a4ac1c962df496ff1",
  "_spec": "file-saver",
  "_where": "/home/tnishikawa/docker/necosystem/jslearning/public/scripts/jslearning",
  "author": "",
  "bundleDependencies": false,
  "deprecated": false,
  "description": "If you need to save really large files bigger then the blob's size limitation or don't have  enough RAM, then have a look at the more advanced [StreamSaver.js](https://github.com/jimmywarting/StreamSaver.js) that can save data directly to the hard drive asynchronously with the power of the new streams API. That will have support for progress, cancelation and knowing when it's done writing",
  "license": "ISC",
  "main": "FileSaver.js",
  "name": "file-saver",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
